{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PIKACHU\\\\Downloads\\\\18BCY10064- FinancePeer\\\\FinancePeer\\\\src\\\\components\\\\LoginFormPage\\\\index.js\";\nimport { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport { Redirect } from 'react-router-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginFormPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      password: '',\n      errorText: ''\n    };\n\n    this.onChangeUsername = event => {\n      this.setState({\n        username: event.target.value\n      });\n    };\n\n    this.onChangePassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.renderUsernameInputUI = () => {\n      const {\n        username\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          htmlFor: \"username\",\n          children: \"USERNAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          className: \"input\",\n          value: username,\n          onChange: this.onChangeUsername,\n          placeholder: \"ENTER USERNAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderPasswordInputUI = () => {\n      const {\n        password\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          htmlFor: \"password\",\n          children: \"PASSWORD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          type: \"password\",\n          className: \"input\",\n          value: password,\n          onChange: this.onChangePassword,\n          placeholder: \"ENTER PASSWORD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.onSuccess = jwtToken => {\n      const {\n        history\n      } = this.props;\n      Cookies.set('jwt_token_stored', jwtToken, {\n        expires: 30\n      });\n      history.replace('/');\n    };\n\n    this.onFailure = errorMsg => {\n      this.setState({\n        errorText: errorMsg\n      });\n    };\n\n    this.onSubmitForm = async event => {\n      event.preventDefault();\n      const {\n        username,\n        password\n      } = this.state;\n      const requestObj = {\n        username,\n        password\n      };\n      const options = {\n        method: 'POST',\n        body: JSON.stringify(requestObj)\n      };\n      const promise = await fetch('https://apis.ccbp.in/login', options);\n      const response = await promise.json();\n\n      if (promise.ok === true) {\n        this.onSuccess(response.jwt_token);\n      } else {\n        this.onFailure(response.error_msg);\n      }\n    };\n\n    this.renderLoginForm = () => {\n      const {\n        errorText\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        onSubmit: this.onSubmitForm,\n        children: [this.renderUsernameInputUI(), this.renderPasswordInputUI(), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: errorText && errorText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n  render() {\n    const jwtToken = Cookies.get('jwt_token_stored');\n\n    if (jwtToken !== undefined) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"login-page-heading\",\n          children: \"Login Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), this.renderLoginForm()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default LoginFormPage;","map":{"version":3,"sources":["C:/Users/PIKACHU/Downloads/18BCY10064- FinancePeer/FinancePeer/src/components/LoginFormPage/index.js"],"names":["Component","Cookies","Redirect","LoginFormPage","state","username","password","errorText","onChangeUsername","event","setState","target","value","onChangePassword","renderUsernameInputUI","renderPasswordInputUI","onSuccess","jwtToken","history","props","set","expires","replace","onFailure","errorMsg","onSubmitForm","preventDefault","requestObj","options","method","body","JSON","stringify","promise","fetch","response","json","ok","jwt_token","error_msg","renderLoginForm","render","get","undefined"],"mappings":"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","sourcesContent":["import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {Redirect} from 'react-router-dom'\nimport './index.css'\n\nclass LoginFormPage extends Component {\n  state = {\n    username: '',\n    password: '',\n    errorText: '',\n  }\n\n  onChangeUsername = event => {\n    this.setState({username: event.target.value})\n  }\n\n  onChangePassword = event => {\n    this.setState({password: event.target.value})\n  }\n\n  renderUsernameInputUI = () => {\n    const {username} = this.state\n    return (\n      <div className=\"input-field\">\n        <label className=\"input-label\" htmlFor=\"username\">\n          USERNAME\n        </label>\n        <br />\n        <input\n          id=\"username\"\n          type=\"text\"\n          className=\"input\"\n          value={username}\n          onChange={this.onChangeUsername}\n          placeholder=\"ENTER USERNAME\"\n        />\n      </div>\n    )\n  }\n\n  renderPasswordInputUI = () => {\n    const {password} = this.state\n    return (\n      <div className=\"input-field\">\n        <label className=\"input-label\" htmlFor=\"password\">\n          PASSWORD\n        </label>\n        <br />\n        <input\n          id=\"password\"\n          type=\"password\"\n          className=\"input\"\n          value={password}\n          onChange={this.onChangePassword}\n          placeholder=\"ENTER PASSWORD\"\n        />\n      </div>\n    )\n  }\n\n  onSuccess = jwtToken => {\n    const {history} = this.props\n    Cookies.set('jwt_token_stored', jwtToken, {\n      expires: 30,\n    })\n    history.replace('/')\n  }\n\n  onFailure = errorMsg => {\n    this.setState({errorText: errorMsg})\n  }\n\n  onSubmitForm = async event => {\n    event.preventDefault()\n    const {username, password} = this.state\n\n    const requestObj = {username, password}\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(requestObj),\n    }\n    const promise = await fetch('https://apis.ccbp.in/login', options)\n    const response = await promise.json()\n    if (promise.ok === true) {\n      this.onSuccess(response.jwt_token)\n    } else {\n      this.onFailure(response.error_msg)\n    }\n  }\n\n  renderLoginForm = () => {\n    const {errorText} = this.state\n    return (\n      <form className=\"login-form\" onSubmit={this.onSubmitForm}>\n        {this.renderUsernameInputUI()}\n        {this.renderPasswordInputUI()}\n        <button className=\"button\" type=\"submit\">\n          Login\n        </button>\n        <p className=\"error-text\">{errorText && errorText}</p>\n      </form>\n    )\n  }\n\n  render() {\n    const jwtToken = Cookies.get('jwt_token_stored')\n    if (jwtToken !== undefined) {\n      return <Redirect to=\"/\" />\n    }\n    return (\n      <div className=\"login-container\">\n        <div className=\"login-form-container\">\n          <h1 className=\"login-page-heading\">Login Form</h1>\n          {this.renderLoginForm()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default LoginFormPage\n"]},"metadata":{},"sourceType":"module"}
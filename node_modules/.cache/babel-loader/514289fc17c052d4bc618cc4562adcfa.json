{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PIKACHU\\\\Downloads\\\\MERN_Stack_Assignment-main\\\\MERN_Stack_Assignment-main\\\\src\\\\components\\\\HomePage\\\\index.js\";\nimport { Component } from 'react';\nimport Header from '../Header';\nimport { HomePageContainer, UploadFileForm, FormHeading, InputField, UploadButton, DataRecordsContainer, DataRecordItem, DataRecordTitle, DataRecordBody, ErrorText } from './styledComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass HomePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedFile: null,\n      isFileValidated: false,\n      fileContent: '',\n      showError: false\n    };\n\n    this.isValidJSON = () => {\n      const {\n        fileContent\n      } = this.state;\n\n      try {\n        JSON.parse(fileContent);\n        this.setState({\n          isFileValidated: true\n        });\n      } catch (e) {\n        console.log('hj');\n        this.setState({\n          isFileValidated: false\n        });\n      }\n    };\n\n    this.getFileContent = () => {\n      const {\n        selectedFile\n      } = this.state;\n      const reader = new FileReader();\n\n      if (selectedFile.type === 'application/json') {\n        reader.onload = e => {\n          const file = e.target.result;\n          const lines = file.split(/\\r\\n|\\n/);\n          this.setState({\n            fileContent: lines.join('\\n'),\n            showError: false\n          });\n        };\n      } else {\n        this.setState({\n          showError: true\n        });\n      }\n\n      reader.onerror = e => e.target.error.name;\n\n      reader.readAsText(selectedFile);\n    };\n\n    this.onFileChange = event => {\n      this.setState({\n        selectedFile: event.target.files[0]\n      }, this.getFileContent);\n    };\n\n    this.onFileUpload = event => {\n      event.preventDefault();\n      const {\n        selectedFile\n      } = this.state;\n\n      if (selectedFile.type === 'application/json') {\n        this.isValidJSON();\n      } else {\n        this.setState({\n          isFileValidated: false,\n          showError: true\n        });\n      }\n    };\n\n    this.renderFileUploadSection = () => /*#__PURE__*/_jsxDEV(UploadFileForm, {\n      onSubmit: this.onFileUpload,\n      children: [/*#__PURE__*/_jsxDEV(FormHeading, {\n        children: \"Upload JSON File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"file\",\n        onChange: this.onFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(UploadButton, {\n        type: \"submit\",\n        children: \"Upload!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this);\n\n    this.renderFileRecords = () => {\n      const {\n        isFileValidated,\n        fileContent,\n        showError\n      } = this.state;\n\n      if (isFileValidated) {\n        const valuesArray = JSON.parse(fileContent);\n        return /*#__PURE__*/_jsxDEV(DataRecordsContainer, {\n          children: valuesArray.map(item => /*#__PURE__*/_jsxDEV(DataRecordItem, {\n            children: [/*#__PURE__*/_jsxDEV(DataRecordTitle, {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DataRecordBody, {\n              children: item.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this);\n      }\n\n      if (showError) {\n        return /*#__PURE__*/_jsxDEV(ErrorText, {\n          children: \"Select Valid JSON Data File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 14\n        }, this);\n      }\n\n      return null;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(HomePageContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), this.renderFileUploadSection(), this.renderFileRecords()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/PIKACHU/Downloads/MERN_Stack_Assignment-main/MERN_Stack_Assignment-main/src/components/HomePage/index.js"],"names":["Component","Header","HomePageContainer","UploadFileForm","FormHeading","InputField","UploadButton","DataRecordsContainer","DataRecordItem","DataRecordTitle","DataRecordBody","ErrorText","HomePage","state","selectedFile","isFileValidated","fileContent","showError","isValidJSON","JSON","parse","setState","e","console","log","getFileContent","reader","FileReader","type","onload","file","target","result","lines","split","join","onerror","error","name","readAsText","onFileChange","event","files","onFileUpload","preventDefault","renderFileUploadSection","renderFileRecords","valuesArray","map","item","title","body","id","render"],"mappings":"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","sourcesContent":["import {Component} from 'react'\n\nimport Header from '../Header'\n\nimport {\n  HomePageContainer,\n  UploadFileForm,\n  FormHeading,\n  InputField,\n  UploadButton,\n  DataRecordsContainer,\n  DataRecordItem,\n  DataRecordTitle,\n  DataRecordBody,\n  ErrorText,\n} from './styledComponent'\n\nclass HomePage extends Component {\n  state = {\n    selectedFile: null,\n    isFileValidated: false,\n    fileContent: '',\n    showError: false,\n  }\n\n  isValidJSON = () => {\n    const {fileContent} = this.state\n    try {\n      JSON.parse(fileContent)\n      this.setState({isFileValidated: true})\n    } catch (e) {\n      console.log('hj')\n      this.setState({isFileValidated: false})\n    }\n  }\n\n  getFileContent = () => {\n    const {selectedFile} = this.state\n    const reader = new FileReader()\n    if (selectedFile.type === 'application/json') {\n      reader.onload = e => {\n        const file = e.target.result\n        const lines = file.split(/\\r\\n|\\n/)\n        this.setState({fileContent: lines.join('\\n'), showError: false})\n      }\n    } else {\n      this.setState({showError: true})\n    }\n\n    reader.onerror = e => e.target.error.name\n    reader.readAsText(selectedFile)\n  }\n\n  onFileChange = event => {\n    this.setState({selectedFile: event.target.files[0]}, this.getFileContent)\n  }\n\n  onFileUpload = event => {\n    event.preventDefault()\n    const {selectedFile} = this.state\n    if (selectedFile.type === 'application/json') {\n      this.isValidJSON()\n    } else {\n      this.setState({isFileValidated: false, showError: true})\n    }\n  }\n\n  renderFileUploadSection = () => (\n    <UploadFileForm onSubmit={this.onFileUpload}>\n      <FormHeading>Upload JSON File</FormHeading>\n      <InputField type=\"file\" onChange={this.onFileChange} />\n      <UploadButton type=\"submit\">Upload!</UploadButton>\n    </UploadFileForm>\n  )\n\n  renderFileRecords = () => {\n    const {isFileValidated, fileContent, showError} = this.state\n    if (isFileValidated) {\n      const valuesArray = JSON.parse(fileContent)\n      return (\n        <DataRecordsContainer>\n          {valuesArray.map(item => (\n            <DataRecordItem key={item.id}>\n              <DataRecordTitle>{item.title}</DataRecordTitle>\n              <DataRecordBody>{item.body}</DataRecordBody>\n            </DataRecordItem>\n          ))}\n        </DataRecordsContainer>\n      )\n    }\n    if (showError) {\n      return <ErrorText>Select Valid JSON Data File</ErrorText>\n    }\n    return null\n  }\n\n  render() {\n    return (\n      <HomePageContainer>\n        <Header />\n        {this.renderFileUploadSection()}\n        {this.renderFileRecords()}\n      </HomePageContainer>\n    )\n  }\n}\n\nexport default HomePage\n"]},"metadata":{},"sourceType":"module"}